apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'

group = 'com.manniwood'
version = '1.0'
description = "Manni's MyBatis PostgreSQL Tpes"

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.mybatis:mybatis:3.2.7'
    testCompile 'org.postgresql:postgresql:9.3-1101-jdbc4'
    testCompile 'ch.qos.logback:logback-core:1.1.2'
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'org.slf4j:slf4j-api:1.7.7'
    testCompile 'org.testng:testng:6.8.8'
}

test {
    useTestNG()

    // options.suites("$projectDir/src/test/resources/testng.xml")
    // work with gradle 11
    options.suites file('src/test/resources/testng.xml')

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

task srcJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allJava
}

task writePom << {
    pom {
        project {
            inceptionYear '2014'
            licenses {
                license {
                    name 'MIT License'
                    url 'http://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }
        }
    }.whenConfigured { pom ->
        // Maven scopes are: compile, runtime, test, system, provided.
        // Gradle seems to map its own testCompile to Maven's test
        println "\nDependencies before filtering:\n"
        pom.dependencies.each {
            println "SCOPE: $it.scope, $it"
        }
        pom.dependencies.removeAll { it.scope == "test" }
        println "\nDependencies after removing test scope:\n"
        pom.dependencies.each {
            println "SCOPE: $it.scope, $it"
        }
    }.writeTo("$buildDir/poms/pom.xml")
}



